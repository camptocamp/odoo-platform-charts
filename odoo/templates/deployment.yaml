---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "odoo.name" . }}
  labels:
    {{- include "odoo.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "odoo.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        config-hash-odoo: {{ include (print $.Template.BasePath "/config-odoo.yaml") $ | sha256sum | trunc 63 }}
        config-hash-secret: {{ include (print $.Template.BasePath "/config-odoo-secret.yaml") $ | sha256sum | trunc 63 }}
        {{- with .Values.additionalAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        app: {{ template "odoo.name" . }}
        release: "{{ .Release.Name }}"
        {{- include "odoo.selectorLabels" . | nindent 8 }}
        {{- with .Values.additionalLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.odoo.marabunta.enabled }}
      initContainers:
        - name: marabunta-migration
          image: "{{ .Values.image.odoo.repository }}:{{ .Values.image.odoo.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ['sh', '-c', "docker-entrypoint.sh gosu odoo migrate"]
          env:
            {{- include "odoo.common-environment" . | nindent 12 }}
          envFrom:
            - configMapRef:
                name: odoo-config{{- include "odoo-cs-suffix" . }}
            - secretRef:
                name: odoo-secret{{- include "odoo-cs-suffix" . }}
                optional: true
      {{- end }}
      containers:
        - name: odoo
          image: "{{ .Values.image.odoo.repository }}:{{ .Values.image.odoo.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
          {{- include "odoo.common-environment" . | nindent 12 }}
          envFrom:
            - configMapRef:
                name: odoo-config{{- include "odoo-cs-suffix" . }}
            - secretRef:
                name: odoo-secret{{- include "odoo-cs-suffix" . }}
                optional: true
          ports:
            - containerPort: 8069
              name: odoo
            - containerPort: 8072
              name: longpolling
          volumeMounts:
            {{- toYaml .Values.volumeMounts | nindent 12 }}
          resources:
          {{- include "odoo.physical-resources" . | nindent 12 }}
        - name: nginx
          image: "{{ .Values.image.nginx.repository }}:{{ .Values.image.nginx.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: nginx-config{{- include "odoo-cs-suffix" . }}
          resources:
            {{- toYaml .Values.resources.nginx | nindent 12 }}
          ports:
            - containerPort: 80
              name: http
      volumes:
        {{- toYaml .Values.volumes | nindent 8 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.spreadOdooPodsOverNodes.enabled }}
      topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              app: {{ template "odoo.name" . }}
              release: "{{ .Release.Name }}"
          maxSkew: {{ .Values.spreadOdooPodsOverNodes.maxSkew }}
          topologyKey: {{ .Values.spreadOdooPodsOverNodes.topologyKey }}
          whenUnsatisfiable: {{ .Values.spreadOdooPodsOverNodes.whenUnsatisfiable }}
      {{- end }}
{{ if .Values.odoo.queuejob.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "odoo.name" . }}-queuejob
  labels:
    {{- include "odoo.labels" . | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "odoo.selectorLabels" . | nindent 6 }}
      queuejob: "true"
  template:
    metadata:
      annotations:
        config-hash-odoo: {{ include (print $.Template.BasePath "/config-odoo.yaml") $ | sha256sum | trunc 63 }}
        config-hash-queuejob: {{ include (print $.Template.BasePath "/config-odoo-queue.yaml") $ | sha256sum | trunc 63 }}
        config-hash-secret: {{ include (print $.Template.BasePath "/config-odoo-secret.yaml") $ | sha256sum | trunc 63 }}
      labels:
        {{- include "odoo.selectorLabels" . | nindent 8 }}
        {{- with .Values.additionalLabels }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
        queuejob: "true"
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.odoo.marabunta.enabled }}
      initContainers:
        - name: marabunta-migration
          image: "{{ .Values.image.odoo.repository }}:{{ .Values.image.odoo.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ['sh', '-c', "docker-entrypoint.sh gosu odoo migrate"]
          env:
            {{- include "odoo.common-environment" . | nindent 12 }}
          envFrom:
            - configMapRef:
                name: odoo-config{{- include "odoo-cs-suffix" . }}
            - secretRef:
                name: odoo-secret{{- include "odoo-cs-suffix" . }}
                optional: true
      {{- end }}
      containers:
        - name: odooqueue
          image: "{{ .Values.image.odoo.repository }}:{{ .Values.image.odoo.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- include "odoo.common-environment" . | nindent 12 }}
          envFrom:
            - configMapRef:
                name: odoo-config{{- include "odoo-cs-suffix" . }}
            - configMapRef:
                name: odooqueue-config{{- include "odoo-cs-suffix" . }}
            - secretRef:
                name: odoo-secret{{- include "odoo-cs-suffix" . }}
                optional: true
          volumeMounts:
            {{- toYaml .Values.volumeMounts | nindent 12 }}
          resources:
          {{- include "odoo.physical-resources" . | nindent 12 }}
      volumes:
        {{- toYaml .Values.volumes | nindent 8 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{ end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "odoo.fullname" . }}
  labels:
    {{- include "odoo.labels" . | nindent 4 }}
spec:
  ports:
    - port: 80
      targetPort: http
  selector:
    {{- include "odoo.selectorLabels" . | nindent 4 }}
...
