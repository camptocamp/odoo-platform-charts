---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: error-page{{- include "odoo-cs-suffix" $ }}
spec:
  selector:
    matchLabels:
      app: error-page{{- include "odoo-cs-suffix" $ }}
  replicas: 1
  template:
    metadata:
      labels:
        app: error-page{{- include "odoo-cs-suffix" $ }}
    spec:
      containers:
      - name: nginx
        image: nginx
        ports:
        - containerPort: 80
        volumeMounts:
        - name: error-page
          mountPath: /usr/share/nginx/html
        - name: nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
      volumes:
      - name: error-page
        configMap:
          name: error-page{{- include "odoo-cs-suffix" $ }}
      - name: nginx-config
        configMap:
          name: nginx-config-error{{- include "odoo-cs-suffix" $ }}
---
apiVersion: v1
kind: Service
metadata:
  name: error-page{{- include "odoo-cs-suffix" $ }}
spec:
  ports:
    - port: 80
      protocol: TCP
  selector:
    app:  error-page{{- include "odoo-cs-suffix" $ }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: error-page{{- include "odoo-cs-suffix" $ }}
data:
  custom_404.html: |
    <html>
    <head>
      <title>404</title>
    </head>
    <body>404</body>
    </html>
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config-error{{- include "odoo-cs-suffix" $ }}
data:
  nginx.conf: |
    user  nginx;
    worker_processes  auto;

    error_log  /var/log/nginx/error.log notice;
    pid        /var/run/nginx.pid;


    events {
        worker_connections  1024;
    }


    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        access_log  /var/log/nginx/access.log  main;

        sendfile        on;
        #tcp_nopush     on;

        keepalive_timeout  65;

        #gzip  on;

        server {
            listen       80;
            server_name  _;

            error_page 404 /custom_404.html;
            location = /custom_404.html {
                    root /usr/share/nginx/html;
                    internal;
            }

            location / {
              return 404;
            }
        }

        include /etc/nginx/conf.d/*.conf;
    }
