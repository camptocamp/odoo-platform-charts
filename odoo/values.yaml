# Default values for odoo.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  pullPolicy: IfNotPresent
  preinit_manager:
    repository: ghcr.io/camptocamp/odoo-preinit-manager
    tag: 1.0.0
  odoo:
    repository: ghcr.io/camptocamp/customer_odoo
    tag: xx.0.1.0.0
  nginx:
    repository: camptocamp/odoo-nginx
    tag: xx.0-1.6.0
  odoohealthz:
    repository: ghcr.io/camptocamp/odoo-k8s-healthz
    tag: app-1.3.3


imagePullSecrets:
  - name: github-packages

service:
  type: ClusterIP
  port: 80

resources:
  nginx:
    requests:
      cpu: 10m
      memory: 64Mi
    limits:
      memory: 256Mi
  odoohealthz:
    requests:
      cpu: 10m
      memory: 64Mi
    limits:
      memory: 256Mi
  
serviceAccountName: "default"

nodeSelector: {}
tolerations: []
rollingupdatechart: False
spreadOdooPodsOverNodes:
  enabled: true
  maxSkew: 1
  topologyKey: "kubernetes.io/hostname"
  whenUnsatisfiable: ScheduleAnyway

affinity: {}

additionalLabels: {}
  # aadpodidbinding: some-identity

additionalAnnotations: {}

ingressRoutes: {}
# ingressRoutes:
#   errorService:
#     name: "service"
#     namespace: "namespace"
#     port: 80
#   defaultMiddlewares:
#     IPWhiteList:
#       - "10.10.0.0.0/16"
#     waf:
#       address: "waf.com"
#       trustForwardHeader: true
#     robotNoIndex: true
#     rateLimits:
#       average: 200
#       burst: 5
#       period: "1m"
#     redirectScheme:
#       scheme: "https"
#       permanent: true
#       port: "443"
#     redirectRegex:
#       - regex: "regex1"
#         replacement: "replacement1"
#         permanent: true
#     externalMiddlewares:
#       - name: "middleware"
#         namespace: "namespace"
#   routes:
#     - hostList:
#         - list:
#             - "address.example.com"
#           certificate:
#             useDefault: false
#             issuerRef: "letsencrypt-prod"
#         - list:
#             - "address.apps.cluster.example.com"
#           certificate:
#             useDefault: true
#       entryPoints:
#         - "websecure"
#       paths:
#         - list:
#             - path: "/"
#               type: prefix
#           middlewares:
#             IPWhiteList:
#               useDefault: true
#             waf:
#               useDefault: true
#             rateLimits:
#               useDefault: true
#             robotNoIndex:
#               useDefault: true
#         - list:
#             - path: "(.*)/some/path"
#               type: regex
#             - path: "/path1"
#               type: specific
#             - path: "/path2/subpath"
#               type: specific
#             - path: "/path3"
#               type: specific
#           middlewares:
#             IPWhiteList:
#               useDefault: false
#               override:
#                 - "192.168.1.5"
#             waf:
#               useDefault: true
#             robotNoIndex:
#               useDefault: true
#             rateLimits:
#               useDefault: true
#             externalMiddlewares:
#               useDefault: false
#               override:
#                 - name: "middleware01"
#                   namespace: "namespace01"

bsTeamPowerUserGroupId: ""

roleBindings: {}
# roleBindings:
#   bs-superuser-pod-exec:
#     subjects:
#     - kind: Group
#       name: 77e80ab2-b3b8-4dac-a5db-99b131169e73
#       apiGroup: rbac.authorization.k8s.io
#     roleRef:
#       kind: ClusterRole
#       name: pod-exec
#       apiGroup: rbac.authorization.k8s.io

odoohealthz: {}
  #odoo_url: "http://localhost:8069"
  #odoo_timeout: 30
  #check_stuck_job: "False"
  #max_job_duration: "3600"
  #check_long_transaction: "False"
  #max_transaction_duration: "3600"
  #log_level:  "ERROR"

preinit_manager: {}
  # celebrimbor_cert:
  #   name: "celebrimbor-dev-fr"
  #   vault_name: "celebrimbor-platform-dev"
  # azure:
  #   tenant_id: ""
  #   client_id: ""
  # celebrimbor_svc: ""
  # onering_svc: ""

odoo:
  customerName: customer
  instance_type: standard
  base_url: ""
  report_url: ""
  env: integration
  storage:
    account_url: ""
    use_aad: '1'
    secret:
      name: odoo-storage
      container: container_name
  metrics:
    scrapeInterval: 15s

  livenessProbe:
    httpGet:
      path: /liveness
      port: 8080
    periodSeconds: 60
    timeoutSeconds: 30

  readinessProbe:
    httpGet:
      path: /readiness
      port: 8080
    periodSeconds: 60
    timeoutSeconds: 30

  startupProbe:
    httpGet:
      path: /liveness
      port: 8080
    failureThreshold: 30
    periodSeconds: 10
    timeoutSeconds: 30


  db:
    secret:
      name: odoo-database
      host: master
      user: username
      password: password
      database: database
    port: "5432"
    max_conn: 5
  redis:
    enabled: False
    secret:
      name: odoo-redis
      url: url
  log_handler: :INFO,werkzeug:ERROR,azure:ERROR
  log_level: info
  unaccent: "False"
  kwkhtmltopdf_server_url: http://kwkhtmltopdf.bs-kwkhtmltopdf01250:8080
  server_env_config: ""
  server_wide_modules: ""
  demo: "False"
  marabunta:
    enabled: "True"
    mode: Full
    allow_series: "False"
    force_backup: False
  limits:
    time_cpu: 86400
    time_real: 86400
    time_real_cron: 600
    request: 8192
  override_limits: {}
    # memory_soft: 650117120
    # memory_hard: 2097152000
    # workers: 12
  override_resources: {}
    # cpu: 5
    # memory: 8Gi
  queuejob:
    enabled: false 
    workers: '2'
    limits:
      soft: "787973120"
      hard: "2147483648"
    max_cron: '0'
    channels: "root:2"
    livenessProbe:
      httpGet:
        path: /queue_liveness
        port: 8080
      periodSeconds: 60
      timeoutSeconds: 30

    startupProbe:
      httpGet:
        path: /queue_liveness
        port: 8080
      failureThreshold: 30
      periodSeconds: 10
      timeoutSeconds: 30

    readinessProbe: {}
