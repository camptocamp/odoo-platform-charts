{{- if .Values.ingress.enabled -}}
{{- with .Values.ingress.IPWhiteList }}
---
apiVersion: traefik.io/v1alpha1
kind: Middleware
metadata:
  name: "ip-{{ include "celebrimbor.fullname" $ }}"
spec:
  ipWhiteList:
    sourceRange:
    {{- range . }}
      - {{ . | quote -}}
    {{ end }}
{{ end }}
{{- with .Values.ingress.hosts }}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: "{{ include "celebrimbor.fullname" $ }}"
spec:
  dnsNames:
  {{- range . }}
    - {{ . | quote -}}
  {{ end }}
  issuerRef:
    group: cert-manager.io
    kind: ClusterIssuer
    name: letsencrypt-prod
  secretName: "{{ include "celebrimbor.fullname" $ }}-tls"
{{ end }}
---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: "{{ include "celebrimbor.fullname" . }}"
spec:
  entryPoints:
    - websecure
  routes:
  {{- range .Values.ingress.hosts }}
    - kind: Rule
      match: Host(`{{ . }}`)
      {{- if $.Values.ingress.IPWhiteList }}
      middlewares:
        - name: "ip-{{ include "celebrimbor.fullname" $ }}"
      {{- end }}
      services:
        - name: {{ include "celebrimbor.fullname" $ }}
          port: {{ $.Values.service.port }}
  {{- end }}
  tls:
    secretName: "{{ include "celebrimbor.fullname" $ }}-tls"
{{- end }}
